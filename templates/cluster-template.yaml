---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: "${CLUSTER_NAME}"
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["192.168.0.0/16"]
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: IonosCloudCluster
    name: "${CLUSTER_NAME}"
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    name: "${CLUSTER_NAME}-control-plane"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: IonosCloudCluster
metadata:
  name: "${CLUSTER_NAME}"
spec:
  controlPlaneEndpoint:
    host: ${CONTROL_PLANE_ENDPOINT_IP}
    port: 6443
  contractNumber: "${IONOSCLOUD_CONTRACT_NUMBER}"
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: "${CLUSTER_NAME}-control-plane"
spec:
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  machineTemplate:
    infrastructureRef:
      kind: IonosCloudMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
      name: "${CLUSTER_NAME}-control-plane"
  kubeadmConfigSpec:
    users:
      - name: root
        sshAuthorizedKeys: [${IONOSCLOUD_MACHINE_SSH_KEYS}]
    ntp:
        enabled: true
        servers:
          - 0.de.pool.ntp.org
          - 1.de.pool.ntp.org
          - 2.de.pool.ntp.org
          - 3.de.pool.ntp.org
    files:
      - path: /etc/ssh/sshd_config.d/ssh-audit_hardening.conf
        owner: root:root
        permissions: '0644'
        content: |
          # Restrict key exchange, cipher, and MAC algorithms, as per sshaudit.com
          # hardening guide.
          KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha256
          Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
          MACs hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,umac-128-etm@openssh.com
          HostKeyAlgorithms ssh-ed25519,ssh-ed25519-cert-v01@openssh.com,sk-ssh-ed25519@openssh.com,sk-ssh-ed25519-cert-v01@openssh.com,rsa-sha2-256,rsa-sha2-512,rsa-sha2-256-cert-v01@openssh.com,rsa-sha2-512-cert-v01@openssh.com
      - path: /etc/sysctl.d/k8s.conf
        content: |
          fs.inotify.max_user_watches = 65536
          net.netfilter.nf_conntrack_max = 1000000
      - path: /etc/modules-load.d/k8s.conf
        content: |
          ip_vs
          ip_vs_rr
          ip_vs_wrr
          ip_vs_sh
          ip_vs_sed
      # Crictl config
      - path: /etc/crictl.yaml
        content: |
          runtime-endpoint: unix:///run/containerd/containerd.sock
          timeout: 10
      - path: /etc/kubernetes/manifests/kube-vip.yaml
        owner: root:root
        content: |
          apiVersion: v1
          kind: Pod
          metadata:
            name: kube-vip
            namespace: kube-system
          spec:
            containers:
            - args:
              - manager
              env:
              - name: cp_enable
                value: "true"
              - name: vip_interface
                value: ${VIP_NETWORK_INTERFACE=""}
              - name: address
                value: ${CONTROL_PLANE_ENDPOINT_IP}
              - name: port
                value: "6443"
              - name: vip_arp
                value: "true"
              - name: vip_leaderelection
                value: "true"
              - name: vip_leaseduration
                value: "15"
              - name: vip_renewdeadline
                value: "10"
              - name: vip_retryperiod
                value: "2"
              image: ghcr.io/kube-vip/kube-vip:v0.7.0
              imagePullPolicy: IfNotPresent
              name: kube-vip
              resources: {}
              securityContext:
                capabilities:
                  add:
                  - NET_ADMIN
                  - NET_RAW
              volumeMounts:
              - mountPath: /etc/kubernetes/admin.conf
                name: kubeconfig
            hostAliases:
            - hostnames:
              - kubernetes
              ip: 127.0.0.1
            hostNetwork: true
            volumes:
            - hostPath:
                path: /etc/kubernetes/admin.conf
                type: FileOrCreate
              name: kubeconfig
          status: {}
    preKubeadmCommands:
      - rm /var/lib/dbus/machine-id /etc/machine-id # fix the machine id
      - dbus-uuidgen --ensure=/etc/machine-id
      - ln -s /etc/machine-id /var/lib/dbus/machine-id
      - systemctl restart systemd-networkd.service systemd-modules-load.service systemd-journald containerd
      # disable swap
      - swapoff -a
      - sed -i '/ swap / s/^/#/' /etc/fstab
      - sysctl --system
    postKubeadmCommands:
      - >
        systemctl disable --now udisks2 multipathd motd-news.timer fwupd-refresh.timer
        packagekit ModemManager snapd snapd.socket snapd.apparmor snapd.seeded
      # TODO(jriedel-ionos): remove that if we have a CCM
      - export system_uuid=$(kubectl --kubeconfig /etc/kubernetes/kubelet.conf get node $(hostname) -ojsonpath='{..systemUUID }')
      - >
        kubectl --kubeconfig /etc/kubernetes/kubelet.conf
        patch node $(hostname)
        --type strategic -p '{"spec": {"providerID": "ionos://'$${system_uuid}'"}}'
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
    joinConfiguration:
      nodeRegistration:
        criSocket: unix:///run/containerd/containerd.sock
  version: "${KUBERNETES_VERSION}"
---
kind: IonosCloudMachineTemplate
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
metadata:
  name: "${CLUSTER_NAME}-control-plane"
spec:
  template:
    spec:
      datacenterID: ${IONOSCLOUD_DATACENTER_ID}
      numCores: ${IONOSCLOUD_MACHINE_NUM_CORES}
      memoryMB: ${IONOSCLOUD_MACHINE_MEMORY_MB}
      cpuFamily: ${IONOSCLOUD_MACHINE_CPU_FAMILY}
      disk:
        image:
          id: ${IONOSCLOUD_MACHINE_IMAGE_ID}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "${CLUSTER_NAME}-workers"
spec:
  clusterName: "${CLUSTER_NAME}"
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels:
  template:
    metadata:
      labels:
        node-role.kubernetes.io/node: ""
    spec:
      clusterName: "${CLUSTER_NAME}"
      version: "${KUBERNETES_VERSION}"
      bootstrap:
        configRef:
          name: "${CLUSTER_NAME}-worker"
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: "${CLUSTER_NAME}-worker"
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        kind: IonosCloudMachineTemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: IonosCloudMachineTemplate
metadata:
  name: "${CLUSTER_NAME}-worker"
spec:
  template:
    spec:
      datacenterID: ${IONOSCLOUD_DATACENTER_ID}
      numCores: ${IONOSCLOUD_MACHINE_NUM_CORES}
      memoryMB: ${IONOSCLOUD_MACHINE_MEMORY_MB}
      cpuFamily: ${IONOSCLOUD_MACHINE_CPU_FAMILY}
      disk:
        image:
          id: ${IONOSCLOUD_MACHINE_IMAGE_ID}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: "${CLUSTER_NAME}-worker"
spec:
  template:
    spec:
      users:
        - name: root
          sshAuthorizedKeys: [${IONOSCLOUD_MACHINE_SSH_KEYS}]
      ntp:
        enabled: true
        servers:
          - 0.de.pool.ntp.org
          - 1.de.pool.ntp.org
          - 2.de.pool.ntp.org
          - 3.de.pool.ntp.org
      files:
        - path: /etc/ssh/sshd_config.d/ssh-audit_hardening.conf
          owner: root:root
          permissions: '0644'
          content: |
            # Restrict key exchange, cipher, and MAC algorithms, as per sshaudit.com
            # hardening guide.
            KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha256
            Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
            MACs hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,umac-128-etm@openssh.com
            HostKeyAlgorithms ssh-ed25519,ssh-ed25519-cert-v01@openssh.com,sk-ssh-ed25519@openssh.com,sk-ssh-ed25519-cert-v01@openssh.com,rsa-sha2-256,rsa-sha2-512,rsa-sha2-256-cert-v01@openssh.com,rsa-sha2-512-cert-v01@openssh.com
        - path: /etc/sysctl.d/k8s.conf
          content: |
            fs.inotify.max_user_watches = 65536
            net.netfilter.nf_conntrack_max = 1000000
        - path: /etc/modules-load.d/k8s.conf
          content: |
            ip_vs
            ip_vs_rr
            ip_vs_wrr
            ip_vs_sh
            ip_vs_sed
        # Crictl config
        - path: /etc/crictl.yaml
          content: |
            runtime-endpoint: unix:///run/containerd/containerd.sock
            timeout: 10
      preKubeadmCommands:
        - rm /var/lib/dbus/machine-id /etc/machine-id # fix the machine id
        - dbus-uuidgen --ensure=/etc/machine-id
        - ln -s /etc/machine-id /var/lib/dbus/machine-id
        - systemctl restart systemd-networkd.service systemd-modules-load.service systemd-journald containerd
        # disable swap
        - swapoff -a
        - sed -i '/ swap / s/^/#/' /etc/fstab
        - sysctl --system
      postKubeadmCommands:
        - >
          systemctl disable --now udisks2 multipathd motd-news.timer fwupd-refresh.timer
          packagekit ModemManager snapd snapd.socket snapd.apparmor snapd.seeded
        # TODO(jriedel-ionos): remove that if we have a CCM
        - export system_uuid=$(kubectl --kubeconfig /etc/kubernetes/kubelet.conf get node $(hostname) -ojsonpath='{..systemUUID }')
        - >
          kubectl --kubeconfig /etc/kubernetes/kubelet.conf
          patch node $(hostname)
          --type strategic -p '{"spec": {"providerID": "ionos://'$${system_uuid}'"}}'
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
          criSocket: unix:///run/containerd/containerd.sock
