---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: ionoscloudmachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    - ionoscloud
    kind: IonosCloudMachine
    listKind: IonosCloudMachineList
    plural: ionoscloudmachines
    shortNames:
    - icm
    singular: ionoscloudmachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster
      jsonPath: .metadata.labels['cluster\.x-k8s\.io/cluster-name']
      name: Cluster
      type: string
    - description: Machine is ready
      jsonPath: .status.ready
      name: Ready
      type: string
    - jsonPath: .status.machineNetworkInfo.nicInfo[*].ipv4Addresses
      name: IPv4 Addresses
      type: string
    - jsonPath: .status.machineNetworkInfo.nicInfo[*].networkID
      name: Machine Connected Networks
      type: string
    - jsonPath: .status.machineNetworkInfo.nicInfo[*].ipv6Addresses
      name: IPv6 Addresses
      priority: 1
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IonosCloudMachine is the Schema for the ionoscloudmachines API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: IonosCloudMachineSpec defines the desired state of IonosCloudMachine.
            properties:
              additionalNetworks:
                description: |-
                  AdditionalNetworks defines the additional network configurations for the VM.
                  NOTE(lubedacht): We currently only support networks with DHCP enabled.
                items:
                  description: Network contains the config for additional LANs.
                  properties:
                    networkID:
                      description: |-
                        NetworkID represents an ID an existing LAN in the data center.
                        This LAN will be excluded from the deletion process.
                      format: int32
                      minimum: 1
                      type: integer
                  required:
                  - networkID
                  type: object
                type: array
              availabilityZone:
                default: AUTO
                description: AvailabilityZone is the availability zone in which the
                  VM should be provisioned.
                enum:
                - AUTO
                - ZONE_1
                - ZONE_2
                type: string
              cpuFamily:
                description: |-
                  CPUFamily defines the CPU architecture, which will be used for this VM.
                  Not all CPU architectures are available in all data centers.


                  If not specified, the cloud will select a suitable CPU family
                  based on the availability in the data center.
                example: AMD_OPTERON
                type: string
              datacenterID:
                description: DatacenterID is the ID of the data center where the VM
                  should be created in.
                format: uuid
                type: string
                x-kubernetes-validations:
                - message: datacenterID is immutable
                  rule: self == oldSelf
              disk:
                description: Disk defines the boot volume of the VM.
                properties:
                  availabilityZone:
                    default: AUTO
                    description: AvailabilityZone is the availability zone where the
                      volume will be created.
                    enum:
                    - AUTO
                    - ZONE_1
                    - ZONE_2
                    - ZONE_3
                    type: string
                  diskType:
                    default: HDD
                    description: DiskType defines the type of the hard drive.
                    enum:
                    - HDD
                    - SSD Standard
                    - SSD Premium
                    type: string
                  image:
                    description: Image is the image to use for the VM.
                    properties:
                      id:
                        description: ID is the ID of the image to use for the VM.
                        minLength: 1
                        type: string
                    required:
                    - id
                    type: object
                  name:
                    description: Name is the name of the volume
                    type: string
                  sizeGB:
                    default: 20
                    description: SizeGB defines the size of the volume in GB
                    minimum: 10
                    type: integer
                required:
                - image
                type: object
              failoverIP:
                description: |-
                  FailoverIP can be set to enable failover for VMs in the same MachineDeployment.
                  It can be either set to an already reserved IPv4 address, or it can be set to "AUTO"
                  which will automatically reserve an IPv4 address for the Failover Group.


                  If the machine is a control plane machine, this field will not be taken into account.
                type: string
                x-kubernetes-validations:
                - message: failoverIP is immutable
                  rule: self == oldSelf
                - message: failoverIP must be either 'AUTO' or a valid IPv4 address
                  rule: self == "AUTO" || self.matches("((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)\\.?\\b){4}$")
              memoryMB:
                default: 3072
                description: |-
                  MemoryMB is the memory size for the VM in MB.
                  Size must be specified in multiples of 256 MB with a minimum of 1024 MB
                  which is required as we are using hot-pluggable RAM by default.
                format: int32
                minimum: 2048
                multipleOf: 1024
                type: integer
              numCores:
                default: 1
                description: NumCores defines the number of cores for the VM.
                format: int32
                minimum: 1
                type: integer
              providerID:
                description: |-
                  ProviderID is the IONOS Cloud provider ID
                  will be in the format ionos://ee090ff2-1eef-48ec-a246-a51a33aa4f3a
                type: string
              type:
                default: ENTERPRISE
                description: Type is the server type of the VM. Can be either ENTERPRISE
                  or VCPU.
                enum:
                - ENTERPRISE
                - VCPU
                type: string
                x-kubernetes-validations:
                - message: type is immutable
                  rule: self == oldSelf
            required:
            - datacenterID
            - disk
            type: object
            x-kubernetes-validations:
            - message: cpuFamily must not be specified when using VCPU
              rule: self.type != 'VCPU' || !has(self.cpuFamily)
          status:
            description: IonosCloudMachineStatus defines the observed state of IonosCloudMachine.
            properties:
              conditions:
                description: Conditions defines current service state of the IonosCloudMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              currentRequest:
                description: |-
                  CurrentRequest shows the current provisioning request for any
                  cloud resource that is being provisioned.
                properties:
                  method:
                    description: Method is the request method
                    type: string
                  requestPath:
                    description: RequestPath is the sub path for the request URL
                    type: string
                  state:
                    description: RequestStatus is the status of the request in the
                      queue.
                    enum:
                    - QUEUED
                    - RUNNING
                    - DONE
                    - FAILED
                    type: string
                required:
                - method
                - requestPath
                type: object
              failureMessage:
                description: |-
                  FailureMessage will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a more verbose string suitable
                  for logging and human consumption.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of IonosCloudMachines
                  can be added as events to the IonosCloudMachine object and/or logged in the
                  controller's output.
                type: string
              failureReason:
                description: |-
                  FailureReason will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a succinct value suitable
                  for machine interpretation.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of IonosCloudMachines
                  can be added as events to the IonosCloudMachine object and/or logged in the
                  controller's output.
                type: string
              machineNetworkInfo:
                description: |-
                  MachineNetworkInfo contains information about the network configuration of the VM.
                  This information is only available after the VM has been provisioned.
                properties:
                  nicInfo:
                    description: NICInfo holds information about the NICs, which are
                      attached to the VM.
                    items:
                      description: NICInfo provides information about the NIC of the
                        VM.
                      properties:
                        ipv4Addresses:
                          description: IPv4Addresses contains the IPv4 addresses of
                            the NIC.
                          items:
                            type: string
                          type: array
                        ipv6Addresses:
                          description: IPv6Addresses contains the IPv6 addresses of
                            the NIC.
                          items:
                            type: string
                          type: array
                        networkID:
                          description: NetworkID is the ID of the LAN to which the
                            NIC is connected.
                          format: int32
                          type: integer
                        primary:
                          description: Primary indicates whether the NIC is the primary
                            NIC of the VM.
                          type: boolean
                      required:
                      - ipv4Addresses
                      - ipv6Addresses
                      - networkID
                      - primary
                      type: object
                    type: array
                type: object
              ready:
                description: Ready indicates the VM has been provisioned and is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
