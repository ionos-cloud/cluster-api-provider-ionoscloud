linters:
  disable-all: true
  enable:
    - asciicheck
    - bodyclose
    - copyloopvar
    - dogsled
    - errcheck
    - gci
    - ginkgolinter
    - goconst
    - gocritic
    - gocyclo
    - godot
    - gofumpt
    - goimports
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - importas
    - ineffassign
    - intrange
    - loggercheck
    - misspell
    - nakedret
    - nilerr
    - nolintlint
    - prealloc
    - revive
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace

linters-settings:
  gci:
    sections:
      - standard
      - default
      - prefix(github.com/ionos-cloud/cluster-api-provider-ionoscloud)
      - blank
      - dot
  gosec:
    excludes:
      - G601 # Implicit memory aliasing of items from a range statement: Obsolete since Go 1.22
  revive:
    rules:
      - name: "exported"
        severity: "warning"
      - name: "var-naming"
        arguments:
        - [] # first list is an allow list. All initialisms placed here will be ignored
        - ["LAN", "IP", "NIC"] # second list is a deny list. These rules will be enforced
        severity: error


  goimports:
    local-prefixes: github.com/ionos-cloud/cluster-api-provider-ionoscloud/
  ifshort:
    # Maximum length of variable declaration measured in number of characters, after which linter won't suggest using short syntax.
    max-decl-chars: 50
  importas:
    no-unaliased: true
    alias:
      # Kubernetes
      - pkg: k8s.io/api/(\w+)/(v[\w\d]+)
        alias: $1$2
      - pkg: k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1
        alias: apiextensionsv1
      - pkg: k8s.io/apimachinery/pkg/apis/meta/v1
        alias: metav1
      - pkg: k8s.io/apimachinery/pkg/api/errors
        alias: apierrors
      - pkg: k8s.io/apimachinery/pkg/util/errors
        alias: kerrors
      # Controller Runtime
      - pkg: sigs.k8s.io/controller-runtime
        alias: ctrl
      - pkg: sigs.k8s.io/cluster-api/api/v1beta1
        alias: clusterv1
      # Own module
      - pkg: github.com/ionos-cloud/cluster-api-provider-ionoscloud/api/v1alpha1
        alias: infrav1
      - pkg: github.com/ionos-cloud/sdk-go/v6
        alias: sdk
  loggercheck:
    require-string-key: true
    no-printf-like: true
  staticcheck:
    go: "1.22"
  stylecheck:
    go: "1.22"

issues:
  max-same-issues: 0
  max-issues-per-linter: 0
  # We are disabling default golangci exclusions because we want to help reviewers to focus on reviewing the most relevant
  # changes in PRs and avoid nitpicking.
  exclude-use-default: false
  # List of regexps of issue texts to exclude, empty list by default.
  exclude:
    # The following are being worked on to remove their exclusion. This list should be reduced or go away all together over time.
    # If it is decided they will not be addressed they should be moved above this comment.
    - Subprocess launch(ed with variable|ing should be audited)
    - (Expect directory permissions to be 0750 or less|Expect file permissions to be 0600 or less)
    - (G104|G307)
  exclude-rules:
    - linters:
        - gci
      path: main\.go
    - linters:
        - gosec
      text: "G108: Profiling endpoint is automatically exposed on /debug/pprof"
    - linters:
        - revive
      text: "exported: exported method .*\\.(Reconcile|SetupWithManager|SetupWebhookWithManager) should have comment or be unexported"
    - linters:
        - errcheck
      text: Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print(f|ln)?|os\.(Un)?Setenv). is not checked
    # With Go 1.16, the new embed directive can be used with an un-named import,
    # revive (previously, golint) only allows these to be imported in a main.go, which wouldn't work for us.
    # This directive allows the embed package to be imported with an underscore everywhere.
    - linters:
        - revive
      source: _ "embed"
    # Exclude some packages or code to require comments, for example test code, or fake clients.
    - linters:
        - revive
      text: exported (method|function|type|const) (.+) should have comment or be unexported
      source: (func|type).*Fake.*
    - linters:
        - revive
      text: exported (method|function|type|const) (.+) should have comment or be unexported
      path: fake_\.go
    - linters:
        - revive
      text: exported (method|function|type|const) (.+) should have comment or be unexported
      path: "(framework|e2e|infrastructure/docker)/.*.go"
    # Disable unparam "always receives" which might not be really
    # useful when building libraries.
    - linters:
        - unparam
      text: always receives
    # Dot imports for gomega or ginkgo are allowed
    # within test files.
    - path: _test\.go
      text: should not use dot imports
    - path: (framework|e2e)/.*.go
      text: should not use dot imports
    - path: _test\.go
      text: cyclomatic complexity
    # Append should be able to assign to a different var/slice.
    - linters:
        - gocritic
      text: "appendAssign: append result not assigned to the same slice"
  exclude-files:
    - "zz_generated.*\\.go$"
    - ".*conversion.*\\.go$"
  exclude-dirs:
    - mock*


run:
  timeout: 10m
  allow-parallel-runners: true
